using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using RegexBuilder;
using static RegexBuilder.Escapes;
using static RegexBuilder.Escapes.Unicode;
namespace RegexBuilderTests
{
    [TestClass]
    public class EscapesTests
    {
        [TestMethod]
        public void TestEscapes()
        {

            Assert.AreEqual(Patterns.CharClass(LineFeed, 'a').Expression, @"[\na]");
            Assert.AreEqual(Patterns.CharClass(CarriageReturn, 'a').Expression, @"[\ra]");
            Assert.AreEqual(Patterns.CharClass(Digit, 'a').Expression, @"[\da]");
            Assert.AreEqual(Patterns.CharClass(NonDigit, 'a').Expression, @"[\Da]");
            Assert.AreEqual(Patterns.CharClass(AnyWordChar, 'a').Expression, @"[\wa]");
            Assert.AreEqual(Patterns.CharClass(NonWordChar, 'a').Expression, @"[\Wa]");
            Assert.AreEqual(Patterns.CharClass(Bell, 'a').Expression, @"[\aa]");
            Assert.AreEqual(Patterns.CharClass(Alarm, 'a').Expression, @"[\aa]");
            Assert.AreEqual(Patterns.CharClass(Backspace, 'a').Expression, @"[\ba]");
            Assert.AreEqual(Patterns.CharClass(Tab, 'a').Expression, @"[\ta]");
            Assert.AreEqual(Patterns.CharClass(VerticalTab, 'a').Expression, @"[\va]");
            Assert.AreEqual(Patterns.CharClass(FormFeed, 'a').Expression, @"[\fa]");
            Assert.AreEqual(Patterns.CharClass(WhiteSpace, 'a').Expression, @"[\sa]");
            Assert.AreEqual(Patterns.CharClass(NonWhiteSpace, 'a').Expression, @"[\Sa]");
            Assert.AreEqual(Patterns.CharClass(Escape, 'a').Expression, @"[\ea]");
            Assert.AreEqual(Patterns.CharClass(Hat, 'a').Expression, @"[\^a]");
            Assert.AreEqual(Patterns.CharClass(Minus, 'a').Expression, @"[\-a]");
            Assert.AreEqual(Patterns.CharClass(OpenSquareBracket, 'a').Expression, @"[\[a]");
            Assert.AreEqual(Patterns.CharClass(BackSlash, 'a').Expression, @"[\\a]");

        }

        [TestMethod]
        public void TestPositiveCategories()
        {
            Assert.AreEqual(UppercaseLetter.ToString(), UnicodeCategory(Categories.UppercaseLetter).ToString());
            Assert.AreEqual(LowercaseLetter.ToString(), UnicodeCategory(Categories.LowercaseLetter).ToString());
            Assert.AreEqual(TitlecaseLetter.ToString(), UnicodeCategory(Categories.TitlecaseLetter).ToString());
            Assert.AreEqual(ModifierLetter.ToString(), UnicodeCategory(Categories.ModifierLetter).ToString());
            Assert.AreEqual(OtherLetter.ToString(), UnicodeCategory(Categories.OtherLetter).ToString());
            Assert.AreEqual(Letter.ToString(), UnicodeCategory(Categories.Letter).ToString());
            Assert.AreEqual(NonspacingMark.ToString(), UnicodeCategory(Categories.NonspacingMark).ToString());
            Assert.AreEqual(SpacingCombiningMark.ToString(), UnicodeCategory(Categories.SpacingCombiningMark).ToString());
            Assert.AreEqual(EnclosingMark.ToString(), UnicodeCategory(Categories.EnclosingMark).ToString());
            Assert.AreEqual(Mark.ToString(), UnicodeCategory(Categories.Mark).ToString());
            Assert.AreEqual(DecimalDigitNumber.ToString(), UnicodeCategory(Categories.DecimalDigitNumber).ToString());
            Assert.AreEqual(LetterNumber.ToString(), UnicodeCategory(Categories.LetterNumber).ToString());
            Assert.AreEqual(OtherNumber.ToString(), UnicodeCategory(Categories.OtherNumber).ToString());
            Assert.AreEqual(Number.ToString(), UnicodeCategory(Categories.Number).ToString());
            Assert.AreEqual(ConnectorPunctuation.ToString(), UnicodeCategory(Categories.ConnectorPunctuation).ToString());
            Assert.AreEqual(DashPunctuation.ToString(), UnicodeCategory(Categories.DashPunctuation).ToString());
            Assert.AreEqual(OpenPunctuation.ToString(), UnicodeCategory(Categories.OpenPunctuation).ToString());
            Assert.AreEqual(ClosePunctuation.ToString(), UnicodeCategory(Categories.ClosePunctuation).ToString());
            Assert.AreEqual(InitialquotePunctuation.ToString(), UnicodeCategory(Categories.InitialquotePunctuation).ToString());
            Assert.AreEqual(FinalquotePunctuation.ToString(), UnicodeCategory(Categories.FinalquotePunctuation).ToString());
            Assert.AreEqual(OtherPunctuation.ToString(), UnicodeCategory(Categories.OtherPunctuation).ToString());
            Assert.AreEqual(Punctuation.ToString(), UnicodeCategory(Categories.Punctuation).ToString());
            Assert.AreEqual(MathSymbol.ToString(), UnicodeCategory(Categories.MathSymbol).ToString());
            Assert.AreEqual(CurrencySymbol.ToString(), UnicodeCategory(Categories.CurrencySymbol).ToString());
            Assert.AreEqual(ModifierSymbol.ToString(), UnicodeCategory(Categories.ModifierSymbol).ToString());
            Assert.AreEqual(OtherSymbol.ToString(), UnicodeCategory(Categories.OtherSymbol).ToString());
            Assert.AreEqual(Patterns.Unicode.Symbol.ToString(), UnicodeCategory(Categories.Symbol).ToString());
            Assert.AreEqual(SpaceSeparator.ToString(), UnicodeCategory(Categories.SpaceSeparator).ToString());
            Assert.AreEqual(LineSeparator.ToString(), UnicodeCategory(Categories.LineSeparator).ToString());
            Assert.AreEqual(ParagraphSeparator.ToString(), UnicodeCategory(Categories.ParagraphSeparator).ToString());
            Assert.AreEqual(Separator.ToString(), UnicodeCategory(Categories.Separator).ToString());
            Assert.AreEqual(Format.ToString(), UnicodeCategory(Categories.Format).ToString());
            Assert.AreEqual(Surrogate.ToString(), UnicodeCategory(Categories.Surrogate).ToString());
            Assert.AreEqual(PrivateUse.ToString(), UnicodeCategory(Categories.PrivateUse).ToString());
            Assert.AreEqual(NotAssigned.ToString(), UnicodeCategory(Categories.NotAssigned).ToString());
            Assert.AreEqual(OtherControl.ToString(), UnicodeCategory(Categories.OtherControl).ToString());
            Assert.AreEqual(Control.ToString(), UnicodeCategory(Categories.Control).ToString());
            Assert.AreEqual(BasicLatin.ToString(), UnicodeCategory(Categories.BasicLatin).ToString());
            Assert.AreEqual(Latin_1Supplement.ToString(), UnicodeCategory(Categories.Latin_1Supplement).ToString());
            Assert.AreEqual(LatinExtended_A.ToString(), UnicodeCategory(Categories.LatinExtended_A).ToString());
            Assert.AreEqual(LatinExtended_B.ToString(), UnicodeCategory(Categories.LatinExtended_B).ToString());
            Assert.AreEqual(IPAExtensions.ToString(), UnicodeCategory(Categories.IPAExtensions).ToString());
            Assert.AreEqual(SpacingModifierLetters.ToString(), UnicodeCategory(Categories.SpacingModifierLetters).ToString());
            Assert.AreEqual(CombiningDiacriticalMarks.ToString(), UnicodeCategory(Categories.CombiningDiacriticalMarks).ToString());
            Assert.AreEqual(Greek.ToString(), UnicodeCategory(Categories.Greek).ToString());
            Assert.AreEqual(GreekandCoptic.ToString(), UnicodeCategory(Categories.GreekandCoptic).ToString());
            Assert.AreEqual(Cyrillic.ToString(), UnicodeCategory(Categories.Cyrillic).ToString());
            Assert.AreEqual(CyrillicSupplement.ToString(), UnicodeCategory(Categories.CyrillicSupplement).ToString());
            Assert.AreEqual(Armenian.ToString(), UnicodeCategory(Categories.Armenian).ToString());
            Assert.AreEqual(Hebrew.ToString(), UnicodeCategory(Categories.Hebrew).ToString());
            Assert.AreEqual(Arabic.ToString(), UnicodeCategory(Categories.Arabic).ToString());
            Assert.AreEqual(Syriac.ToString(), UnicodeCategory(Categories.Syriac).ToString());
            Assert.AreEqual(Thaana.ToString(), UnicodeCategory(Categories.Thaana).ToString());
            Assert.AreEqual(Devanagari.ToString(), UnicodeCategory(Categories.Devanagari).ToString());
            Assert.AreEqual(Bengali.ToString(), UnicodeCategory(Categories.Bengali).ToString());
            Assert.AreEqual(Gurmukhi.ToString(), UnicodeCategory(Categories.Gurmukhi).ToString());
            Assert.AreEqual(Gujarati.ToString(), UnicodeCategory(Categories.Gujarati).ToString());
            Assert.AreEqual(Oriya.ToString(), UnicodeCategory(Categories.Oriya).ToString());
            Assert.AreEqual(Tamil.ToString(), UnicodeCategory(Categories.Tamil).ToString());
            Assert.AreEqual(Telugu.ToString(), UnicodeCategory(Categories.Telugu).ToString());
            Assert.AreEqual(Kannada.ToString(), UnicodeCategory(Categories.Kannada).ToString());
            Assert.AreEqual(Malayalam.ToString(), UnicodeCategory(Categories.Malayalam).ToString());
            Assert.AreEqual(Sinhala.ToString(), UnicodeCategory(Categories.Sinhala).ToString());
            Assert.AreEqual(Thai.ToString(), UnicodeCategory(Categories.Thai).ToString());
            Assert.AreEqual(Lao.ToString(), UnicodeCategory(Categories.Lao).ToString());
            Assert.AreEqual(Tibetan.ToString(), UnicodeCategory(Categories.Tibetan).ToString());
            Assert.AreEqual(Myanmar.ToString(), UnicodeCategory(Categories.Myanmar).ToString());
            Assert.AreEqual(Georgian.ToString(), UnicodeCategory(Categories.Georgian).ToString());
            Assert.AreEqual(HangulJamo.ToString(), UnicodeCategory(Categories.HangulJamo).ToString());
            Assert.AreEqual(Ethiopic.ToString(), UnicodeCategory(Categories.Ethiopic).ToString());
            Assert.AreEqual(Cherokee.ToString(), UnicodeCategory(Categories.Cherokee).ToString());
            Assert.AreEqual(UnifiedCanadianAboriginalSyllabics.ToString(), UnicodeCategory(Categories.UnifiedCanadianAboriginalSyllabics).ToString());
            Assert.AreEqual(Ogham.ToString(), UnicodeCategory(Categories.Ogham).ToString());
            Assert.AreEqual(Runic.ToString(), UnicodeCategory(Categories.Runic).ToString());
            Assert.AreEqual(Tagalog.ToString(), UnicodeCategory(Categories.Tagalog).ToString());
            Assert.AreEqual(Hanunoo.ToString(), UnicodeCategory(Categories.Hanunoo).ToString());
            Assert.AreEqual(Buhid.ToString(), UnicodeCategory(Categories.Buhid).ToString());
            Assert.AreEqual(Tagbanwa.ToString(), UnicodeCategory(Categories.Tagbanwa).ToString());
            Assert.AreEqual(Khmer.ToString(), UnicodeCategory(Categories.Khmer).ToString());
            Assert.AreEqual(Mongolian.ToString(), UnicodeCategory(Categories.Mongolian).ToString());
            Assert.AreEqual(Limbu.ToString(), UnicodeCategory(Categories.Limbu).ToString());
            Assert.AreEqual(TaiLe.ToString(), UnicodeCategory(Categories.TaiLe).ToString());
            Assert.AreEqual(KhmerSymbols.ToString(), UnicodeCategory(Categories.KhmerSymbols).ToString());
            Assert.AreEqual(PhoneticExtensions.ToString(), UnicodeCategory(Categories.PhoneticExtensions).ToString());
            Assert.AreEqual(LatinExtendedAdditional.ToString(), UnicodeCategory(Categories.LatinExtendedAdditional).ToString());
            Assert.AreEqual(GreekExtended.ToString(), UnicodeCategory(Categories.GreekExtended).ToString());
            Assert.AreEqual(GeneralPunctuation.ToString(), UnicodeCategory(Categories.GeneralPunctuation).ToString());
            Assert.AreEqual(SuperscriptsandSubscripts.ToString(), UnicodeCategory(Categories.SuperscriptsandSubscripts).ToString());
            Assert.AreEqual(CurrencySymbols.ToString(), UnicodeCategory(Categories.CurrencySymbols).ToString());
            Assert.AreEqual(CombiningDiacriticalMarksforSymbols.ToString(), UnicodeCategory(Categories.CombiningDiacriticalMarksforSymbols).ToString());
            Assert.AreEqual(CombiningMarksforSymbols.ToString(), UnicodeCategory(Categories.CombiningMarksforSymbols).ToString());
            Assert.AreEqual(LetterlikeSymbols.ToString(), UnicodeCategory(Categories.LetterlikeSymbols).ToString());
            Assert.AreEqual(NumberForms.ToString(), UnicodeCategory(Categories.NumberForms).ToString());
            Assert.AreEqual(Arrows.ToString(), UnicodeCategory(Categories.Arrows).ToString());
            Assert.AreEqual(MathematicalOperators.ToString(), UnicodeCategory(Categories.MathematicalOperators).ToString());
            Assert.AreEqual(MiscellaneousTechnical.ToString(), UnicodeCategory(Categories.MiscellaneousTechnical).ToString());
            Assert.AreEqual(ControlPictures.ToString(), UnicodeCategory(Categories.ControlPictures).ToString());
            Assert.AreEqual(OpticalCharacterRecognition.ToString(), UnicodeCategory(Categories.OpticalCharacterRecognition).ToString());
            Assert.AreEqual(EnclosedAlphanumerics.ToString(), UnicodeCategory(Categories.EnclosedAlphanumerics).ToString());
            Assert.AreEqual(BoxDrawing.ToString(), UnicodeCategory(Categories.BoxDrawing).ToString());
            Assert.AreEqual(BlockElements.ToString(), UnicodeCategory(Categories.BlockElements).ToString());
            Assert.AreEqual(GeometricShapes.ToString(), UnicodeCategory(Categories.GeometricShapes).ToString());
            Assert.AreEqual(MiscellaneousSymbols.ToString(), UnicodeCategory(Categories.MiscellaneousSymbols).ToString());
            Assert.AreEqual(Dingbats.ToString(), UnicodeCategory(Categories.Dingbats).ToString());
            Assert.AreEqual(MiscellaneousMathematicalSymbols_A.ToString(), UnicodeCategory(Categories.MiscellaneousMathematicalSymbols_A).ToString());
            Assert.AreEqual(SupplementalArrows_A.ToString(), UnicodeCategory(Categories.SupplementalArrows_A).ToString());
            Assert.AreEqual(BraillePatterns.ToString(), UnicodeCategory(Categories.BraillePatterns).ToString());
            Assert.AreEqual(SupplementalArrows_B.ToString(), UnicodeCategory(Categories.SupplementalArrows_B).ToString());
            Assert.AreEqual(MiscellaneousMathematicalSymbols_B.ToString(), UnicodeCategory(Categories.MiscellaneousMathematicalSymbols_B).ToString());
            Assert.AreEqual(SupplementalMathematicalOperators.ToString(), UnicodeCategory(Categories.SupplementalMathematicalOperators).ToString());
            Assert.AreEqual(MiscellaneousSymbolsandArrows.ToString(), UnicodeCategory(Categories.MiscellaneousSymbolsandArrows).ToString());
            Assert.AreEqual(CJKRadicalsSupplement.ToString(), UnicodeCategory(Categories.CJKRadicalsSupplement).ToString());
            Assert.AreEqual(KangxiRadicals.ToString(), UnicodeCategory(Categories.KangxiRadicals).ToString());
            Assert.AreEqual(IdeographicDescriptionCharacters.ToString(), UnicodeCategory(Categories.IdeographicDescriptionCharacters).ToString());
            Assert.AreEqual(CJKSymbolsandPunctuation.ToString(), UnicodeCategory(Categories.CJKSymbolsandPunctuation).ToString());
            Assert.AreEqual(Hiragana.ToString(), UnicodeCategory(Categories.Hiragana).ToString());
            Assert.AreEqual(Katakana.ToString(), UnicodeCategory(Categories.Katakana).ToString());
            Assert.AreEqual(Bopomofo.ToString(), UnicodeCategory(Categories.Bopomofo).ToString());
            Assert.AreEqual(HangulCompatibilityJamo.ToString(), UnicodeCategory(Categories.HangulCompatibilityJamo).ToString());
            Assert.AreEqual(Kanbun.ToString(), UnicodeCategory(Categories.Kanbun).ToString());
            Assert.AreEqual(BopomofoExtended.ToString(), UnicodeCategory(Categories.BopomofoExtended).ToString());
            Assert.AreEqual(KatakanaPhoneticExtensions.ToString(), UnicodeCategory(Categories.KatakanaPhoneticExtensions).ToString());
            Assert.AreEqual(EnclosedCJKLettersandMonths.ToString(), UnicodeCategory(Categories.EnclosedCJKLettersandMonths).ToString());
            Assert.AreEqual(CJKCompatibility.ToString(), UnicodeCategory(Categories.CJKCompatibility).ToString());
            Assert.AreEqual(CJKUnifiedIdeographsExtensionA.ToString(), UnicodeCategory(Categories.CJKUnifiedIdeographsExtensionA).ToString());
            Assert.AreEqual(YijingHexagramSymbols.ToString(), UnicodeCategory(Categories.YijingHexagramSymbols).ToString());
            Assert.AreEqual(CJKUnifiedIdeographs.ToString(), UnicodeCategory(Categories.CJKUnifiedIdeographs).ToString());
            Assert.AreEqual(YiSyllables.ToString(), UnicodeCategory(Categories.YiSyllables).ToString());
            Assert.AreEqual(YiRadicals.ToString(), UnicodeCategory(Categories.YiRadicals).ToString());
            Assert.AreEqual(HangulSyllables.ToString(), UnicodeCategory(Categories.HangulSyllables).ToString());
            Assert.AreEqual(HighSurrogates.ToString(), UnicodeCategory(Categories.HighSurrogates).ToString());
            Assert.AreEqual(HighPrivateUseSurrogates.ToString(), UnicodeCategory(Categories.HighPrivateUseSurrogates).ToString());
            Assert.AreEqual(LowSurrogates.ToString(), UnicodeCategory(Categories.LowSurrogates).ToString());
            Assert.AreEqual(PrivateUseArea.ToString(), UnicodeCategory(Categories.PrivateUseArea).ToString());
            Assert.AreEqual(CJKCompatibilityIdeographs.ToString(), UnicodeCategory(Categories.CJKCompatibilityIdeographs).ToString());
            Assert.AreEqual(LettericPresentationForms.ToString(), UnicodeCategory(Categories.LettericPresentationForms).ToString());
            Assert.AreEqual(ArabicPresentationForms_A.ToString(), UnicodeCategory(Categories.ArabicPresentationForms_A).ToString());
            Assert.AreEqual(VariationSelectors.ToString(), UnicodeCategory(Categories.VariationSelectors).ToString());
            Assert.AreEqual(CombiningHalfMarks.ToString(), UnicodeCategory(Categories.CombiningHalfMarks).ToString());
            Assert.AreEqual(CJKCompatibilityForms.ToString(), UnicodeCategory(Categories.CJKCompatibilityForms).ToString());
            Assert.AreEqual(SmallFormVariants.ToString(), UnicodeCategory(Categories.SmallFormVariants).ToString());
            Assert.AreEqual(ArabicPresentationForms_B.ToString(), UnicodeCategory(Categories.ArabicPresentationForms_B).ToString());
            Assert.AreEqual(HalfwidthandFullwidthForms.ToString(), UnicodeCategory(Categories.HalfwidthandFullwidthForms).ToString());
            Assert.AreEqual(Specials.ToString(), UnicodeCategory(Categories.Specials).ToString());

        }

        [TestMethod]
        public void TestNegativeCategories()
        {
            Assert.AreEqual(NonUppercaseLetter.ToString(), NegativeUnicodeCategory(Categories.UppercaseLetter).ToString());
            Assert.AreEqual(NonLowercaseLetter.ToString(), NegativeUnicodeCategory(Categories.LowercaseLetter).ToString());
            Assert.AreEqual(NonTitlecaseLetter.ToString(), NegativeUnicodeCategory(Categories.TitlecaseLetter).ToString());
            Assert.AreEqual(NonModifierLetter.ToString(), NegativeUnicodeCategory(Categories.ModifierLetter).ToString());
            Assert.AreEqual(NonOtherLetter.ToString(), NegativeUnicodeCategory(Categories.OtherLetter).ToString());
            Assert.AreEqual(NonLetter.ToString(), NegativeUnicodeCategory(Categories.Letter).ToString());
            Assert.AreEqual(SpacingMark.ToString(), NegativeUnicodeCategory(Categories.NonspacingMark).ToString());
            Assert.AreEqual(NonSpacingCombiningMark.ToString(), NegativeUnicodeCategory(Categories.SpacingCombiningMark).ToString());
            Assert.AreEqual(NonEnclosingMark.ToString(), NegativeUnicodeCategory(Categories.EnclosingMark).ToString());
            Assert.AreEqual(NonMark.ToString(), NegativeUnicodeCategory(Categories.Mark).ToString());
            Assert.AreEqual(NonDecimalDigitNumber.ToString(), NegativeUnicodeCategory(Categories.DecimalDigitNumber).ToString());
            Assert.AreEqual(NonLetterNumber.ToString(), NegativeUnicodeCategory(Categories.LetterNumber).ToString());
            Assert.AreEqual(NonOtherNumber.ToString(), NegativeUnicodeCategory(Categories.OtherNumber).ToString());
            Assert.AreEqual(NonNumber.ToString(), NegativeUnicodeCategory(Categories.Number).ToString());
            Assert.AreEqual(NonConnectorPunctuation.ToString(), NegativeUnicodeCategory(Categories.ConnectorPunctuation).ToString());
            Assert.AreEqual(NonDashPunctuation.ToString(), NegativeUnicodeCategory(Categories.DashPunctuation).ToString());
            Assert.AreEqual(NonOpenPunctuation.ToString(), NegativeUnicodeCategory(Categories.OpenPunctuation).ToString());
            Assert.AreEqual(NonClosePunctuation.ToString(), NegativeUnicodeCategory(Categories.ClosePunctuation).ToString());
            Assert.AreEqual(NonInitialquotePunctuation.ToString(), NegativeUnicodeCategory(Categories.InitialquotePunctuation).ToString());
            Assert.AreEqual(NonFinalquotePunctuation.ToString(), NegativeUnicodeCategory(Categories.FinalquotePunctuation).ToString());
            Assert.AreEqual(NonOtherPunctuation.ToString(), NegativeUnicodeCategory(Categories.OtherPunctuation).ToString());
            Assert.AreEqual(NonPunctuation.ToString(), NegativeUnicodeCategory(Categories.Punctuation).ToString());
            Assert.AreEqual(NonMathSymbol.ToString(), NegativeUnicodeCategory(Categories.MathSymbol).ToString());
            Assert.AreEqual(NonCurrencySymbol.ToString(), NegativeUnicodeCategory(Categories.CurrencySymbol).ToString());
            Assert.AreEqual(NonModifierSymbol.ToString(), NegativeUnicodeCategory(Categories.ModifierSymbol).ToString());
            Assert.AreEqual(NonOtherSymbol.ToString(), NegativeUnicodeCategory(Categories.OtherSymbol).ToString());
            Assert.AreEqual(NonSymbol.ToString(), NegativeUnicodeCategory(Categories.Symbol).ToString());
            Assert.AreEqual(NonSpaceSeparator.ToString(), NegativeUnicodeCategory(Categories.SpaceSeparator).ToString());
            Assert.AreEqual(NonLineSeparator.ToString(), NegativeUnicodeCategory(Categories.LineSeparator).ToString());
            Assert.AreEqual(NonParagraphSeparator.ToString(), NegativeUnicodeCategory(Categories.ParagraphSeparator).ToString());
            Assert.AreEqual(NonSeparator.ToString(), NegativeUnicodeCategory(Categories.Separator).ToString());
            Assert.AreEqual(NonFormat.ToString(), NegativeUnicodeCategory(Categories.Format).ToString());
            Assert.AreEqual(NonSurrogate.ToString(), NegativeUnicodeCategory(Categories.Surrogate).ToString());
            Assert.AreEqual(NonPrivateUse.ToString(), NegativeUnicodeCategory(Categories.PrivateUse).ToString());
            Assert.AreEqual(Assigned.ToString(), NegativeUnicodeCategory(Categories.NotAssigned).ToString());
            Assert.AreEqual(NonOtherControl.ToString(), NegativeUnicodeCategory(Categories.OtherControl).ToString());
            Assert.AreEqual(NonControl.ToString(), NegativeUnicodeCategory(Categories.Control).ToString());
            Assert.AreEqual(NonBasicLatin.ToString(), NegativeUnicodeCategory(Categories.BasicLatin).ToString());
            Assert.AreEqual(NonLatin_1Supplement.ToString(), NegativeUnicodeCategory(Categories.Latin_1Supplement).ToString());
            Assert.AreEqual(NonLatinExtended_A.ToString(), NegativeUnicodeCategory(Categories.LatinExtended_A).ToString());
            Assert.AreEqual(NonLatinExtended_B.ToString(), NegativeUnicodeCategory(Categories.LatinExtended_B).ToString());
            Assert.AreEqual(NonIPAExtensions.ToString(), NegativeUnicodeCategory(Categories.IPAExtensions).ToString());
            Assert.AreEqual(NonSpacingModifierLetters.ToString(), NegativeUnicodeCategory(Categories.SpacingModifierLetters).ToString());
            Assert.AreEqual(NonCombiningDiacriticalMarks.ToString(), NegativeUnicodeCategory(Categories.CombiningDiacriticalMarks).ToString());
            Assert.AreEqual(NonGreek.ToString(), NegativeUnicodeCategory(Categories.Greek).ToString());
            Assert.AreEqual(NonGreekandCoptic.ToString(), NegativeUnicodeCategory(Categories.GreekandCoptic).ToString());
            Assert.AreEqual(NonCyrillic.ToString(), NegativeUnicodeCategory(Categories.Cyrillic).ToString());
            Assert.AreEqual(NonCyrillicSupplement.ToString(), NegativeUnicodeCategory(Categories.CyrillicSupplement).ToString());
            Assert.AreEqual(NonArmenian.ToString(), NegativeUnicodeCategory(Categories.Armenian).ToString());
            Assert.AreEqual(NonHebrew.ToString(), NegativeUnicodeCategory(Categories.Hebrew).ToString());
            Assert.AreEqual(NonArabic.ToString(), NegativeUnicodeCategory(Categories.Arabic).ToString());
            Assert.AreEqual(NonSyriac.ToString(), NegativeUnicodeCategory(Categories.Syriac).ToString());
            Assert.AreEqual(NonThaana.ToString(), NegativeUnicodeCategory(Categories.Thaana).ToString());
            Assert.AreEqual(NonDevanagari.ToString(), NegativeUnicodeCategory(Categories.Devanagari).ToString());
            Assert.AreEqual(NonBengali.ToString(), NegativeUnicodeCategory(Categories.Bengali).ToString());
            Assert.AreEqual(NonGurmukhi.ToString(), NegativeUnicodeCategory(Categories.Gurmukhi).ToString());
            Assert.AreEqual(NonGujarati.ToString(), NegativeUnicodeCategory(Categories.Gujarati).ToString());
            Assert.AreEqual(NonOriya.ToString(), NegativeUnicodeCategory(Categories.Oriya).ToString());
            Assert.AreEqual(NonTamil.ToString(), NegativeUnicodeCategory(Categories.Tamil).ToString());
            Assert.AreEqual(NonTelugu.ToString(), NegativeUnicodeCategory(Categories.Telugu).ToString());
            Assert.AreEqual(NonKannada.ToString(), NegativeUnicodeCategory(Categories.Kannada).ToString());
            Assert.AreEqual(NonMalayalam.ToString(), NegativeUnicodeCategory(Categories.Malayalam).ToString());
            Assert.AreEqual(NonSinhala.ToString(), NegativeUnicodeCategory(Categories.Sinhala).ToString());
            Assert.AreEqual(NonThai.ToString(), NegativeUnicodeCategory(Categories.Thai).ToString());
            Assert.AreEqual(NonLao.ToString(), NegativeUnicodeCategory(Categories.Lao).ToString());
            Assert.AreEqual(NonTibetan.ToString(), NegativeUnicodeCategory(Categories.Tibetan).ToString());
            Assert.AreEqual(NonMyanmar.ToString(), NegativeUnicodeCategory(Categories.Myanmar).ToString());
            Assert.AreEqual(NonGeorgian.ToString(), NegativeUnicodeCategory(Categories.Georgian).ToString());
            Assert.AreEqual(NonHangulJamo.ToString(), NegativeUnicodeCategory(Categories.HangulJamo).ToString());
            Assert.AreEqual(NonEthiopic.ToString(), NegativeUnicodeCategory(Categories.Ethiopic).ToString());
            Assert.AreEqual(NonCherokee.ToString(), NegativeUnicodeCategory(Categories.Cherokee).ToString());
            Assert.AreEqual(NonUnifiedCanadianAboriginalSyllabics.ToString(), NegativeUnicodeCategory(Categories.UnifiedCanadianAboriginalSyllabics).ToString());
            Assert.AreEqual(NonOgham.ToString(), NegativeUnicodeCategory(Categories.Ogham).ToString());
            Assert.AreEqual(NonRunic.ToString(), NegativeUnicodeCategory(Categories.Runic).ToString());
            Assert.AreEqual(NonTagalog.ToString(), NegativeUnicodeCategory(Categories.Tagalog).ToString());
            Assert.AreEqual(NonHanunoo.ToString(), NegativeUnicodeCategory(Categories.Hanunoo).ToString());
            Assert.AreEqual(NonBuhid.ToString(), NegativeUnicodeCategory(Categories.Buhid).ToString());
            Assert.AreEqual(NonTagbanwa.ToString(), NegativeUnicodeCategory(Categories.Tagbanwa).ToString());
            Assert.AreEqual(NonKhmer.ToString(), NegativeUnicodeCategory(Categories.Khmer).ToString());
            Assert.AreEqual(NonMongolian.ToString(), NegativeUnicodeCategory(Categories.Mongolian).ToString());
            Assert.AreEqual(NonLimbu.ToString(), NegativeUnicodeCategory(Categories.Limbu).ToString());
            Assert.AreEqual(NonTaiLe.ToString(), NegativeUnicodeCategory(Categories.TaiLe).ToString());
            Assert.AreEqual(NonKhmerSymbols.ToString(), NegativeUnicodeCategory(Categories.KhmerSymbols).ToString());
            Assert.AreEqual(NonPhoneticExtensions.ToString(), NegativeUnicodeCategory(Categories.PhoneticExtensions).ToString());
            Assert.AreEqual(NonLatinExtendedAdditional.ToString(), NegativeUnicodeCategory(Categories.LatinExtendedAdditional).ToString());
            Assert.AreEqual(NonGreekExtended.ToString(), NegativeUnicodeCategory(Categories.GreekExtended).ToString());
            Assert.AreEqual(NonGeneralPunctuation.ToString(), NegativeUnicodeCategory(Categories.GeneralPunctuation).ToString());
            Assert.AreEqual(NonSuperscriptsandSubscripts.ToString(), NegativeUnicodeCategory(Categories.SuperscriptsandSubscripts).ToString());
            Assert.AreEqual(NonCurrencySymbols.ToString(), NegativeUnicodeCategory(Categories.CurrencySymbols).ToString());
            Assert.AreEqual(NonCombiningDiacriticalMarksforSymbols.ToString(), NegativeUnicodeCategory(Categories.CombiningDiacriticalMarksforSymbols).ToString());
            Assert.AreEqual(NonCombiningMarksforSymbols.ToString(), NegativeUnicodeCategory(Categories.CombiningMarksforSymbols).ToString());
            Assert.AreEqual(NonLetterlikeSymbols.ToString(), NegativeUnicodeCategory(Categories.LetterlikeSymbols).ToString());
            Assert.AreEqual(NonNumberForms.ToString(), NegativeUnicodeCategory(Categories.NumberForms).ToString());
            Assert.AreEqual(NonArrows.ToString(), NegativeUnicodeCategory(Categories.Arrows).ToString());
            Assert.AreEqual(NonMathematicalOperators.ToString(), NegativeUnicodeCategory(Categories.MathematicalOperators).ToString());
            Assert.AreEqual(NonMiscellaneousTechnical.ToString(), NegativeUnicodeCategory(Categories.MiscellaneousTechnical).ToString());
            Assert.AreEqual(NonControlPictures.ToString(), NegativeUnicodeCategory(Categories.ControlPictures).ToString());
            Assert.AreEqual(NonOpticalCharacterRecognition.ToString(), NegativeUnicodeCategory(Categories.OpticalCharacterRecognition).ToString());
            Assert.AreEqual(NonEnclosedAlphanumerics.ToString(), NegativeUnicodeCategory(Categories.EnclosedAlphanumerics).ToString());
            Assert.AreEqual(NonBoxDrawing.ToString(), NegativeUnicodeCategory(Categories.BoxDrawing).ToString());
            Assert.AreEqual(NonBlockElements.ToString(), NegativeUnicodeCategory(Categories.BlockElements).ToString());
            Assert.AreEqual(NonGeometricShapes.ToString(), NegativeUnicodeCategory(Categories.GeometricShapes).ToString());
            Assert.AreEqual(NonMiscellaneousSymbols.ToString(), NegativeUnicodeCategory(Categories.MiscellaneousSymbols).ToString());
            Assert.AreEqual(NonDingbats.ToString(), NegativeUnicodeCategory(Categories.Dingbats).ToString());
            Assert.AreEqual(NonMiscellaneousMathematicalSymbols_A.ToString(), NegativeUnicodeCategory(Categories.MiscellaneousMathematicalSymbols_A).ToString());
            Assert.AreEqual(NonSupplementalArrows_A.ToString(), NegativeUnicodeCategory(Categories.SupplementalArrows_A).ToString());
            Assert.AreEqual(NonBraillePatterns.ToString(), NegativeUnicodeCategory(Categories.BraillePatterns).ToString());
            Assert.AreEqual(NonSupplementalArrows_B.ToString(), NegativeUnicodeCategory(Categories.SupplementalArrows_B).ToString());
            Assert.AreEqual(NonMiscellaneousMathematicalSymbols_B.ToString(), NegativeUnicodeCategory(Categories.MiscellaneousMathematicalSymbols_B).ToString());
            Assert.AreEqual(NonSupplementalMathematicalOperators.ToString(), NegativeUnicodeCategory(Categories.SupplementalMathematicalOperators).ToString());
            Assert.AreEqual(NonMiscellaneousSymbolsandArrows.ToString(), NegativeUnicodeCategory(Categories.MiscellaneousSymbolsandArrows).ToString());
            Assert.AreEqual(NonCJKRadicalsSupplement.ToString(), NegativeUnicodeCategory(Categories.CJKRadicalsSupplement).ToString());
            Assert.AreEqual(NonKangxiRadicals.ToString(), NegativeUnicodeCategory(Categories.KangxiRadicals).ToString());
            Assert.AreEqual(NonIdeographicDescriptionCharacters.ToString(), NegativeUnicodeCategory(Categories.IdeographicDescriptionCharacters).ToString());
            Assert.AreEqual(NonCJKSymbolsandPunctuation.ToString(), NegativeUnicodeCategory(Categories.CJKSymbolsandPunctuation).ToString());
            Assert.AreEqual(NonHiragana.ToString(), NegativeUnicodeCategory(Categories.Hiragana).ToString());
            Assert.AreEqual(NonKatakana.ToString(), NegativeUnicodeCategory(Categories.Katakana).ToString());
            Assert.AreEqual(NonBopomofo.ToString(), NegativeUnicodeCategory(Categories.Bopomofo).ToString());
            Assert.AreEqual(NonHangulCompatibilityJamo.ToString(), NegativeUnicodeCategory(Categories.HangulCompatibilityJamo).ToString());
            Assert.AreEqual(NonKanbun.ToString(), NegativeUnicodeCategory(Categories.Kanbun).ToString());
            Assert.AreEqual(NonBopomofoExtended.ToString(), NegativeUnicodeCategory(Categories.BopomofoExtended).ToString());
            Assert.AreEqual(NonKatakanaPhoneticExtensions.ToString(), NegativeUnicodeCategory(Categories.KatakanaPhoneticExtensions).ToString());
            Assert.AreEqual(NonEnclosedCJKLettersandMonths.ToString(), NegativeUnicodeCategory(Categories.EnclosedCJKLettersandMonths).ToString());
            Assert.AreEqual(NonCJKCompatibility.ToString(), NegativeUnicodeCategory(Categories.CJKCompatibility).ToString());
            Assert.AreEqual(NonCJKUnifiedIdeographsExtensionA.ToString(), NegativeUnicodeCategory(Categories.CJKUnifiedIdeographsExtensionA).ToString());
            Assert.AreEqual(NonYijingHexagramSymbols.ToString(), NegativeUnicodeCategory(Categories.YijingHexagramSymbols).ToString());
            Assert.AreEqual(NonCJKUnifiedIdeographs.ToString(), NegativeUnicodeCategory(Categories.CJKUnifiedIdeographs).ToString());
            Assert.AreEqual(NonYiSyllables.ToString(), NegativeUnicodeCategory(Categories.YiSyllables).ToString());
            Assert.AreEqual(NonYiRadicals.ToString(), NegativeUnicodeCategory(Categories.YiRadicals).ToString());
            Assert.AreEqual(NonHangulSyllables.ToString(), NegativeUnicodeCategory(Categories.HangulSyllables).ToString());
            Assert.AreEqual(NonHighSurrogates.ToString(), NegativeUnicodeCategory(Categories.HighSurrogates).ToString());
            Assert.AreEqual(NonHighPrivateUseSurrogates.ToString(), NegativeUnicodeCategory(Categories.HighPrivateUseSurrogates).ToString());
            Assert.AreEqual(NonLowSurrogates.ToString(), NegativeUnicodeCategory(Categories.LowSurrogates).ToString());
            Assert.AreEqual(NonPrivateUseArea.ToString(), NegativeUnicodeCategory(Categories.PrivateUseArea).ToString());
            Assert.AreEqual(NonCJKCompatibilityIdeographs.ToString(), NegativeUnicodeCategory(Categories.CJKCompatibilityIdeographs).ToString());
            Assert.AreEqual(NonLettericPresentationForms.ToString(), NegativeUnicodeCategory(Categories.LettericPresentationForms).ToString());
            Assert.AreEqual(NonArabicPresentationForms_A.ToString(), NegativeUnicodeCategory(Categories.ArabicPresentationForms_A).ToString());
            Assert.AreEqual(NonVariationSelectors.ToString(), NegativeUnicodeCategory(Categories.VariationSelectors).ToString());
            Assert.AreEqual(NonCombiningHalfMarks.ToString(), NegativeUnicodeCategory(Categories.CombiningHalfMarks).ToString());
            Assert.AreEqual(NonCJKCompatibilityForms.ToString(), NegativeUnicodeCategory(Categories.CJKCompatibilityForms).ToString());
            Assert.AreEqual(NonSmallFormVariants.ToString(), NegativeUnicodeCategory(Categories.SmallFormVariants).ToString());
            Assert.AreEqual(NonArabicPresentationForms_B.ToString(), NegativeUnicodeCategory(Categories.ArabicPresentationForms_B).ToString());
            Assert.AreEqual(NonHalfwidthandFullwidthForms.ToString(), NegativeUnicodeCategory(Categories.HalfwidthandFullwidthForms).ToString());
            Assert.AreEqual(NonSpecials.ToString(), NegativeUnicodeCategory(Categories.Specials).ToString());
        }

        [TestMethod]
        public void TestUnicodChars()
        {
            var c = UnicodeChar(222);
            Assert.AreEqual(c.ToString(), @"\u00de");

            c = UnicodeChar(0xaf);
            Assert.AreEqual(c.ToString(), @"\u00af");
        }

    }


}
